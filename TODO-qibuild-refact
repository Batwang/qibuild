* move FakeGit inside qisrc.tests.conftests

* rename qisrc.manifest.Manifest -> qisrc.manifest.RemoteManifest

* use qisys.ui.info_count everywhere

* parser.get_* functions should be usable with **kwargs too:

  def get_worktree(args=None, **kwargs):
    options = dict()
    if args:
      options = vars(args[0])
    else:
      options = kwargs

  or just make something more explicit ...

* qisrc init with a file

* XMLParser.xml_elem() -> dump()
* XMLParser._write_foo()  -> _dump_foo()

* add qisys.actions.list()

* get rid of qibuild.parsers.toc_parser()

* read env, toolchain name et all from qibuild config files

* qisrc.worktree.Remote -> qisrc.manifest.Remote

* remove all traces of incredibuild

* add --reverse-deps

* get rid of qisys.log and the LOGGER instances

* rewrite qibuild.config using XMLParser

* rename qibuild.config -> qibuild.xml_config ?

* remove qitoolchain.get()

* choose between destdir and dest_dir

* remove qisrc manifest from "local config"

* `qibuild config` should list the available build profiles

* implement conversion from old syntax

* remove `--quiet-commands`

* add group for every action parser

* fix all doc strings ...

* handle custom build dir

* handle custom sdk dir ?

* remove qibuild.configstore, use XML for toolchain
  storage

* replace old qibuild.dependencies_solver by ne
  qibuild.deps_solver

* check that qibuild project names are unique

* re-add qisrc foreach -p

* qibuild_action("configure")
  -> qibuild_action.call("configure") ?
  -> qibuild_action.configure("...") ?

* qibuild deploy: fix gdb config files generation

* remove qisrc snapshot --manifest

* always check CMake correctness (find_package(qibuild) *after* project)
  > maybe this could be done in CMake instead ...

* add a "path" type in argparse so that (on windows at least) we:
    - always convert to lower case
    - check for forbiddin characters
  write a test for #11255

* get rid of qibuild test ``--slow``, this makes no sense: the
  list of tests and wether they are nightly or not is managed from cmake

* add qibuild test --failed

* remove `qisys.command.CommandLine`, move `qisy.sh.run` to `qisys.command`

* remove worktree args from actions, just build then on
  the fly when needed

* also ?

    class GitWorkTree():
      def __init__(self, worktree=None):
          if not worktree:
            worktree = WorkTree()
          else:
            self.worktree = worktree

    class WorkTree():
      def __init__(self, root=None):
        if not root:
          self.root = os.getcwd()
        else:
          sel.root = root
