Mananing build configurations
=============================


In this tutorial, you will learn how to use serveral
build configurations with the same sources.


The problem
-----------

Let's say you have a +foo+ library, with some tests.
You want to make the compilation of the tests optional
(because they depend on +gtest+, and you do not want to
force your users to have gtest)

A standard CMake way to do it would be

[source, cmake]
----

option(WITH_GTEST "Enable compilation of unit tests" OFF)

if(WITH_GTEST)
  find_package(GTest Required)

  ...

  add_test(...)

  ...

endif()
----

So far so good.


But now you have to pass "-DWITH_GTEST=ON" to all your project when you
configure them.


Note that ther is a shortcut for that in qibuild CMake API:
[source, cmake]
----
qi_add_optional_package(GTEST)

----

Here, if GTEST is not found, no error is raised, and WITH_GTEST is
simply set to "OFF"...

But let's assume you *really* need some flags


Passing CMake Flags with qiBuild
--------------------------------

There are several ways to pass CMake flags to a project managed by qiBuild,
in ascending priority:

* Just once

Simply call:
----
qibuild configure foo -DWITH_GTEST=ON
----

* For all the projects on your worktree

You may want to trigger some flags depending on the
toolchain / configuration you use.

For instance, if you want to pass -DWITH_FOO=OFF when you are using
the toolchain mingw32, you can write something like:

[source, cmake]
----
set(WITH_FOO OFF CACHE INTERAL "" FORCE)
----

in .qi/mingw32.cmake



Using build configurations
--------------------------


QiBuild also lets you to have different settings depending on the
toolchain you use.

For instance, you could have on a windows machine

[source, ini]
----
[general]
env.path = ....


[config mingw32]
cmake.generator = 'MinGW Makefiles'
env.path = c:\MinGW\bin

[config win32-vs2010]
cmake.generator =  'Visual Studio 10'
----

This can be done just for your current worktree (in
<worktree/.qi/qibuild.cfg), or for all your worktrees,
in .config/qi/qibuild/qibuild.cfg


NOTE: Several tools or qibuild actions will update your config
      files for you, so please be careful :)

