QIBUILD(1)
==========
:doctype: manpage


NAME
----
qibuild - get, build, install projects.


SYNOPSIS
--------
*qibuild* ['OPTIONS'] COMMAND ['COMMAND_OPTIONS'] ARGUMENTS


DESCRIPTION
-----------
The command line program qibuild provides severals actions to work with projects.
You can configure, build, install and generate binary archives of projects.


COMMANDS
--------
%s


OPTIONS
-------
*--work-tree='WORK_TREE'::
    Specify the work tree. This can be an environment variable too.

*-h, --help* ['TOPIC']::
    Print help TOPIC. *--help* 'topics' will print a list of help
    topics, *--help*='syntax' summarizes AsciiDoc syntax,
    *--help*='manpage' prints the AsciiDoc manpage.

*-v, --verbose*::
    Print verbose output.

CONFIGURATION
-------------
The configuration file is stored in .qi/build.cfg. +
The following keys are available:

General::

*general.build.config*:::
    The default build configuration. (see Build)

*general.cmake.flags*:::
    Additional CMake flags to pass to all projects, in all configuration.
    If you want specific clags for a configuration, please refer to Build.
    Flags look like: "FOO=BAR TITI=CACA"

Project::
Configuration specific to a project.

*project.<name>.cmake.flags*:::
    like general.cmake.flags but applied to a specific project.

*project.<name>.depends*:::
    specify the depends that apply to a project, this is only build depends.
    this is a space separated list.

*project.<name>.rdepends*:::
    specify runtime dependencies of a project.
    this is a space separated list.


Build::
This section allows you to creat specific build configuration.
You set the default build configuration using general.build.config.
You can pass the build configuration using -c <buildconfig> in the command line.

*build.<name>.cmake.flags*:::
   cmake flags specific to a build configuration.


EXIT STATUS
-----------
*0*::
    Success

*1*::
    Failure

