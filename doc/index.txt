QiBuild
=======
Cedric GESTES <cgestes@aldebaran-robotics.com>

Introduction
------------
QiBuild aims to make compilation of your sources easy. It manages
dependencies between projects and supports easy cross-compilation.
By default QiBuild use libraries provided by your system, but you
can use QiToolchain to get a toolchain if you dont want to build
with your system libraries or want to cross-compile.

QiBuild is composed of three parts:

* the QiBuild CMake framework, that simplify CMakeLists.txt writing.
* the qibuild command line program, that allows build a project taking dependencies
  into account.
* the qitoolchain command line program, that fetches binary packages from server.


Getting Started
---------------
Learn how to use qibuild and qitoolchain to compile your projects:

* link:qibuild.html[QiBuild getting started]
* link:qitoolchain.html[QiToolchain getting started]

Learn how to write cmake list for your projects:

* link:cmaketutorial.html[QiBuild CMake Tutorials]

Manuals (man pages)
-------------------
* link:qibuild-manpage.html[qibuild manpage]
* link:qitoolchain-manpage.html[qitoolchain manpage]

QiBuild CMake API
-----------------
link:cmakeapi.html[QiBuild CMake API]


QiBuild SDK
-----------
Multiple build directory
~~~~~~~~~~~~~~~~~~~~~~~~
QiBuildsupport multiple build directories. This allow you to
build for multiple plateform using the same sources. You can have a build
folder for windows next to a build folder for linux.

SDK Layout
~~~~~~~~~~
You will always find a sdk folder inside your build directory. The folder is
organised following the link:http://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard[FHS].
This allow multiples projects to be merged without conflict, furthermore
software can be installed under a link:http://en.wikipedia.org/wiki/Linux_Standard_Base[LSB]
compatible system, without breaking established convention. All QiBuild CMake functions
try to follow those rules. Install rules are autogenerated for executables and libraries.
