qiBuild Install
===============

Using the git repository
-------------------------

Use this method if you wish to use qibuild from the git repository.

After this is done, you just have to pull the git repository to
have an up-to-date qibuild.

This is the preferred method right now.


Linux, Mac, Windows from ``git-bash`` or mingw
+++++++++++++++++++++++++++++++++++++++++++++++

Simply run::

  ./generate-sourceme.sh

And then patch your ``~/.profile`` to look like::

  source /path/to/qibuild/sourceme.sh


This makes it possible to use ``qibuild`` without
setting ``PYTHONPATH``, and adds some tools to your shell,
such as ``qicd``

Windows from cmd.exe
+++++++++++++++++++++


* Make sure ``c:\Python27`` and ``c:\Python27\scripts`` are in ``%PATH%``
  (adapt these paths to reflect your Python's installation)

Then run::

  install-qibuild.bat


Net that you won't be able to use ``qicd`` from the ``cmd.exe``


Packaging qibuild
-----------------

On linux
+++++++++

If you want to package qibuild for a linux distribution, you have to take care
of the following:

* Install the CMake part of qibuild (to use qibuild CMake function without
  depending on the command line)

* Optionaly install (driven by the QIBUILD_CMAKE_ONLY CMake flag) the python
  part of qibuild (for the command line to work), and generate and install the
  man pages for every qibuild tool (``qisrc``, ``qibuild``, ``qidoc``, ...)

This is taken care of by the ``CMakeLists.txt`` at the root of the qibuild repository

It will:

* install the cmake part of qibuild to /usr/share/cmake/qibuild/
* if the CMake flag QIBUILD_CMAKE_ONLY is OFF (defaults is OFF):

  * find the correct python version  (python2.6 or 2.7), configure a setup.py file and
    run ``setup.py install``

  * if docutils is found, run ``rst2man`` to build the man pages and install them


On other platforms
++++++++++++++++++

Right now there are no plans to package qibuild on Mac or Windows. Ideas welcome ;)
