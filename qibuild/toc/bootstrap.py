##
## Author(s):
##  - Cedric GESTES <gestes@aldebaran-robotics.com>
##  - Dimitri Merejkowsky <dmerejkowsy@aldebaran-robotics.com>
##
## Copyright (C) 2010 Aldebaran Robotics
##

def bootstrap(project, args):
    print "TODO: generate bootstrap for ", project
    pass

def generate_find_deps(toc, project, args):
    """Generate the find_deps.cmake for the given project
    """
    build_dir = project.cmake.get_build_dir()
    if not os.path.exists(build_dir):
        os.makedirs(build_dir)
    dep_sdk_dirs = list()
    deps = toc.resolve_deps([project])
    deps.remove(project)
    for dep in deps:
        dep_build_dir = dep.cmake.get_build_dir()
        dep_sdk_dir = os.path.join(dep_build_dir, "sdk")
        dep_sdk_dirs.append(dep_sdk_dir)

    to_write = "#Autogenerated file. Do NOT edit.\n"
    for dep_sdk_dir in dep_sdk_dirs:
        to_write += """list(APPEND CMAKE_PREFIX_PATH "%s")\n""" % \
            qibuild.toc.path.to_posix_path(dep_sdk_dir)

    output_path = os.path.join(build_dir, "find_deps.cmake")
    with open(output_path, "w") as output_file:
        output_file.write(to_write)

    logger = logging.getLogger(__name__)
    logger.debug("Wrote %s to %s", to_write, output_path)
