<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <groupId>com.test</groupId>
  <artifactId>hellojava</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>hellojava</name>
  <url></url>
  <description></description>

  <licenses>
    <license>
      <name>See COPYING</name>
      <url></url>
    </license>
  </licenses>

  <properties> <!-- Project encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <lib.directory>src/main/resources/</lib.directory>

    <!-- Plugin versions -->
    <maven-assembly-plugin.version>2.3</maven-assembly-plugin.version>

    <!-- Native libraries handling -->
    <native.arch>${os.arch}</native.arch>
    <native.path.resolved>${native.path}</native.path.resolved>
    <native.path.resolvedd>${native.path}</native.path.resolvedd>
    <native.prefix>target/lib</native.prefix>
    <native.library-path.resolved>${native.library-path}</native.library-path.resolved>
  </properties>

  <dependencies>
    <dependency> <!-- Dependency to java test suite -->
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.6</version>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- Dependency to native qimessaging library (embeded into a jar) -->
      <groupId>com.test</groupId>
      <version>1.0-SNAPSHOT</version>
      <artifactId>hellojavajni</artifactId>
    </dependency>
  </dependencies>


  <!-- Handle platform for native libraries -->
  <profiles>
    <profile>
      <id>Linux</id>
      <activation>
        <property>
          <name>os.name</name>
          <value>Linux</value>
        </property>
      </activation>
      <properties>
        <native.os>${os.name}</native.os>
        <native.name>libhellojavajni.so</native.name>
        <native.path>${native.prefix}/${native.name}</native.path>
        <native.library-path>${native.prefix}</native.library-path>
      </properties>
    </profile>

    <profile>
      <id>Windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <native.os>Windows</native.os>
        <native.name>hellojavajni.dll</native.name>
        <native.path>${native.prefix}/${native.name}</native.path>
        <native.library-path>${native.prefix}</native.library-path>
      </properties>
    </profile>

    <profile>
      <id>Mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <native.os>${os.name}</native.os>
        <native.name>hellojavajni.dylib</native.name>
        <native.path>${native.prefix}/${native.name}</native.path>
        <native.library-path>${native.prefix}</native.library-path>
      </properties>
    </profile>
  </profiles>


  <build>
    <resources> <!-- Package native libraries as resources -->
      <resource>
        <filtering>false</filtering>
        <directory>${basedir}/src/main/resources</directory>
        <includes>
          <include>${native.name}</include>
        </includes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>${basedir}/src/main/java</directory>
        <includes>
          <include>**/*.java</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin> <!-- Plug Ecplise on project -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>true</downloadJavadocs>
        </configuration>
      </plugin>
      <plugin> <!-- Handle project dependencies -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution> <!-- Specify plugin behavior -->
            <id>unpack</id>
            <phase>compile</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.test</groupId>
                  <artifactId>hellojavajni</artifactId>
                  <version>1.0-SNAPSHOT</version>
                  <classifier>${build.type}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${lib.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- Mandatory plugin to make an runnable binary -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <!-- Do not appends "jar-with-dependencies" to jar name. -->
          <appendAssemblyId>false</appendAssemblyId>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>com.test.App</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <source>5</source>
          <target>5</target>
        </configuration>
      </plugin>
    </plugins>
  </build>


  <repositories>
    <repository>
      <id>local-repository</id>
    <name>Native</name>
    <url>file:///tmp/maven/hellojavajni</url>
    </repository>
  </repositories>

</project>
