#!/usr/bin/env python
##
## Author(s):
##  - Cedric GESTES <gestes@aldebaran-robotics.com>
##
## Copyright (C) 2009, 2010, 2011 Aldebaran Robotics
##

"""qiBuild command line tool.
"""

# sys.path

import sys
import os

try:
    import argparse
except ImportError:
    from qitools.external import argparse

import qitools.cmdparse

def print_version():
    """Print qibuild root cmake path.
    May be useful sometimes, where
    qibuild configure --boostrap from cmake seems
    overkill

    """
    import qibuild
    version = "0.1" # TODO!
    print "qibuild version: %s" % version
    root_cmake = os.path.abspath(os.path.join(qibuild.CMAKE_QIBUILD_DIR, ".."))
    print "Using cmake code from `%s'" % root_cmake


def main():
    parser = argparse.ArgumentParser()
    modules = qitools.cmdparse.action_modules_from_package("qibuild.actions")

    if len(sys.argv) == 2 and sys.argv[1] == '--version':
        print_version()
        sys.exit(0)

    # no arguments...
    if len(sys.argv) == 1:
        # and we are in a qibuild project
        if qitools.qiworktree.search_manifest_directory(os.getcwd()):
            qitools.cmdparse.root_command_main("qibuild", argparse.ArgumentParser(), modules, args=[ "configure" ])
            qitools.cmdparse.root_command_main("qibuild", argparse.ArgumentParser(), modules, args=[ "make" ])
            return

    if not qitools.cmdparse.root_command_main("qibuild", parser, modules, return_if_no_action=True):
        argsc = [ "configure" ]
        argsc.extend(sys.argv[1:])
        qitools.cmdparse.root_command_main("qibuild", argparse.ArgumentParser(), modules, args=argsc)

        argsm = [ "make" ]
        argsm.extend(sys.argv[1:])
        qitools.cmdparse.root_command_main("qibuild", argparse.ArgumentParser(), modules, args=argsm)

if __name__ == "__main__":
    main()
