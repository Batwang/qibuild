TODO
====

CMake:
* finish qi_use_lib (handle version, handle component, handler error
  messages properly)
* do something nice with static/shared libraries
   - several cases:
         * shared builds, shared deps   (useful on robot: perf, eg a plugin)
         * static builds, static deps   (useful for portability and "hiding deps")
         * shared builds, static deps   (useful for re-distributable library, eg qimessaging)
         * static builds, shared deps   (for fun ...)
   - shared build -> set (BUILD_SHARED_LIBS TRUE)
   - static search -> set (CMAKE_FIND_LIBRARY_SUFFIXES ".a")
   TODO:
    abstract those details for the user

* fix linker problems when using toolchain and third party libraries
* modules: decide weither clean/fpath/flib/depends/export_* is part of the public qiBuild API (rename to qi_fpath, qi_flib, qi_fdepends ?)
* export lib does not fail when REQUIRED is set

qiBuild:
* configstore: merge dependencies and cflags properly
* fix install component (only have two components: runtime and devel)

qiSrc:
* Git: when trying to get the url, use:
  git remote for remote names, and if there is only one,
  git config --get remote.NAME.
  This cover 99% of the cases.
  If there are several remotes, do not do anything.
  Do not check anything before calling qirsrc pull, it's much better
  to have the pure git error messages.

* qisrc add should be able to read a base git url. For instance,
  qisrc add foo/bar.git, should read a setting and clone git://example.com:foo/bar.git


DOC:
 * fix tutorials on using toolchain
 * cmake: document +_INCLUDE_DIRS+, +_LIBS+, ....
 * use cmake to generate documentation !
 * How to use a lib not wrapped in qiBuild (opengl for example)
 * How to use a qiBuild project from a standard cmake project
 * Add a troubleshooting section and/or a FAQ, when there are enough
   people using qibuild ;-)

Install:
  * root's cmake list should honor CMAKE_INSTALL_PREFIX setting.
  * qibuild.get_cmake_root_path() could for cmake instead of
  trusted qibuild/config.py

Compat:
  * when we see a base.cfg, override the bootstrap.cmake,
  and create proper qibuild.manifest and qibuild.cmake,
  to that going from toc to qibuild is automagic

  * same thing for ROS?

To help automatic testing:
  * When sys.stdout is not a tty
    - Do not print "installing..." stuff when installing packages
    - Do not call tar with a verbose argument when building packages
